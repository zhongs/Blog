<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>ali-oss 同步到 minio</title>
    <url>/2021/02/02/ali-oss-%E5%90%8C%E6%AD%A5%E5%88%B0-minio/</url>
    <content><![CDATA[<ul>
<li><p><code>Rclone</code> 是一个命令行程序，用于管理云存储上的文件。它是云供应商Web存储界面的功能丰富的替代方案。超过40种云存储产品支持rclone，包括S3对象存储，业务和消费者文件存储服务以及标准传输协议。Rclone具有等效于unix命令rsync，cp，mv，mount，ls，ncdu，tree，rm和cat的强大的云功能。 Rclone熟悉的语法包括Shell管道支持和–dry-run保护。它可在命令行，脚本或通过其API使用。用户将rclone称为“云存储的瑞士军刀”和“与魔术不可区分的技术”。</p>
</li>
<li><p><code>amazon (S3)</code> 是一个公开的服务，Web 应用程序开发人员可以使用它存储数字资产，包括图片、视频、音乐和文档。 S3 提供一个 RESTful API 以编程方式实现与该服务的交互。</p>
</li>
</ul>
<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul>
<li>服务器 CentOS 7 </li>
</ul>
<h1 id="rclone-安装"><a href="#rclone-安装" class="headerlink" title="rclone 安装"></a>rclone 安装</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl https://rclone.org/install.sh | sudo bash</span><br></pre></td></tr></table></figure>
<h1 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h1><ul>
<li><code>~/.config/rclone/rclone.conf</code></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# cat .config/rclone/rclone.conf</span><br><span class="line"></span><br><span class="line">[oss-cn-beijing]</span><br><span class="line">type = s3</span><br><span class="line">provider = Alibaba</span><br><span class="line">env_auth = false</span><br><span class="line">access_key_id = &lt;YOUR_ACCESS_KEY_ID&gt; # 阿里云后台查看</span><br><span class="line">secret_access_key = &lt;YOUR_SECRET_ACCESS_KEY&gt; # 阿里云后台查看</span><br><span class="line">endpoint = &lt;YOUR_REGION&gt;.aliyuncs.com  # 阿里云后台查看</span><br><span class="line">acl = private</span><br><span class="line">storage_class = Standard</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[minio]</span><br><span class="line">type = s3</span><br><span class="line">env_auth = false</span><br><span class="line">access_key_id = minio  </span><br><span class="line">secret_access_key = minio123</span><br><span class="line">region = us-east-1</span><br><span class="line">endpoint = http://127.0.0.1:9000</span><br><span class="line">location_constraint =</span><br><span class="line">server_side_encryption =</span><br></pre></td></tr></table></figure>
<h1 id="同步"><a href="#同步" class="headerlink" title="同步"></a>同步</h1><ul>
<li>将 ali-oss 同步到 minio <code>--transfers</code> 设置并发数量 <code>-P</code> 显示实时进度</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rclone sync -P oss-cn-beijing:bucket-test007 minio:test --transfers=10</span><br></pre></td></tr></table></figure>
<h1 id="参阅资料"><a href="#参阅资料" class="headerlink" title="参阅资料"></a>参阅资料</h1><ul>
<li><a href="https://rclone.org/" target="_blank" rel="noopener">https://rclone.org/</a></li>
<li><a href="https://sunpma.com/864.html" target="_blank" rel="noopener">https://sunpma.com/864.html</a></li>
<li><a href="https://yq.aliyun.com/articles/749107" target="_blank" rel="noopener">https://yq.aliyun.com/articles/749107</a></li>
</ul>
]]></content>
      <categories>
        <category>数据迁移</category>
      </categories>
      <tags>
        <tag>minio</tag>
      </tags>
  </entry>
  <entry>
    <title>GitLab 自动化构建</title>
    <url>/2021/02/03/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%9E%84%E5%BB%BA/</url>
    <content><![CDATA[<ul>
<li>GitLab <code>CI/CD</code> 是GitLab内置的工具，用于通过连续方法进行软件开发</li>
<li><code>持续集成</code> 的工作原理是将小的代码块推送到Git存储库中托管的应用程序代码库中，并且每次推送都运行一系列脚本来构建，测试和验证代码更改，然后再将其合并到主分支中。</li>
<li><code>GitLab Runner</code> 是一个开源项目，用于运作任务，并把结果发送回GitLab，它与GitLab CI一起使用。</li>
</ul>
<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul>
<li>服务器 CentOS 7 </li>
</ul>
<h1 id="GitLab-安装"><a href="#GitLab-安装" class="headerlink" title="GitLab 安装"></a>GitLab 安装</h1><ul>
<li><p>安装文档<br><a href="https://about.gitlab.com/install/#centos-7" target="_blank" rel="noopener">https://about.gitlab.com/install/#centos-7</a></p>
</li>
<li><p>修改配置文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vi /etc/gitlab/gitlab.rb</span><br><span class="line">external_url 'http://192.168.235.128:9090'</span><br><span class="line">nginx['listen_port'] = 9090</span><br><span class="line"></span><br><span class="line">vi /var/opt/gitlab/nginx/conf/gitlab-http.conf</span><br><span class="line">server &#123;</span><br><span class="line">    listen *:9090;</span><br><span class="line">    server_name 192.168.235.128;</span><br></pre></td></tr></table></figure>
</li>
<li><p>使配置生效</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">gitlab-ctl reconfigure</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">gitlab-ctl start</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="GitLab-Runer-安装"><a href="#GitLab-Runer-安装" class="headerlink" title="GitLab Runer 安装"></a>GitLab Runer 安装</h1><ul>
<li><p>安装文档<br><a href="https://docs.gitlab.com/runner/install/linux-manually.html" target="_blank" rel="noopener">https://docs.gitlab.com/runner/install/linux-manually.html</a></p>
</li>
<li><p>项目中配置<br>默认 gitlab-runner 安装使用 gitlab-runner 用户执行命令，这里会遇到用户权限问题，需要修改用户权限或者修改默认用户。</p>
<p>修改默认用户为 <code>root</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo gitlab-runner uninstall</span><br><span class="line">sudo gitlab-runner install --user=root --working-directory=/home/gitlab-runner</span><br><span class="line">sudo gitlab-runner restart</span><br></pre></td></tr></table></figure>
<p>查看用户是否修改成功</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# ps aux | grep gitlab-runner</span><br><span class="line">root      1174  1.1  0.2 138140 20708 ?        Ssl  08:22   3:51 /usr/bin/gitlab-runner run --working-directory /home/gitlab-runner --config /etc/gitlab-runner/config.toml --service gitlab-runner --syslog --user root</span><br><span class="line">root     17883  0.0  0.0 112828   984 pts/1    S+   13:54   0:00 grep --color=auto gitlab-runner</span><br></pre></td></tr></table></figure>
<p>对需要自动化构建的项目注册 gitlab-runner</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# sudo gitlab-runner register</span><br><span class="line">Runtime platform                                    arch=amd64 os=linux pid=16876 revision=738bbe5a version=13.3.1</span><br><span class="line">Running in system-mode.</span><br><span class="line"></span><br><span class="line">Please enter the gitlab-ci coordinator URL (e.g. https://gitlab.com/):</span><br></pre></td></tr></table></figure>
<p><img src="/images/gitlab-runner.png" alt="值参考截图" title="截图参考"></p>
<p>查看注册成功后的项目</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# cat /etc/gitlab-runner/config.toml</span><br><span class="line">concurrent = 1</span><br><span class="line">check_interval = 0</span><br><span class="line"></span><br><span class="line">[session_server]</span><br><span class="line">  session_timeout = 1800</span><br><span class="line"></span><br><span class="line">[[runners]]</span><br><span class="line">  name = "project-cicd --&gt; settings --&gt; ci/cd"</span><br><span class="line">  url = "http://192.168.235.129:9090/"</span><br><span class="line">  token = "4cc764522780c8f518a97f3dc508c7"</span><br><span class="line">  executor = "shell"</span><br><span class="line">  [runners.custom_build_dir]</span><br><span class="line">  [runners.cache]</span><br><span class="line">    [runners.cache.s3]</span><br><span class="line">    [runners.cache.gcs]</span><br><span class="line"></span><br><span class="line">[[runners]]</span><br><span class="line">  name = "fontend-cicd"</span><br><span class="line">  url = "http://192.168.235.129:9090/"</span><br><span class="line">  token = "4c97f60c414ea508e3c6733d2033a1"</span><br><span class="line">  executor = "shell"</span><br><span class="line">  [runners.custom_build_dir]</span><br><span class="line">  [runners.cache]</span><br><span class="line">    [runners.cache.s3]</span><br><span class="line">    [runners.cache.gcs]</span><br><span class="line"></span><br><span class="line">[[runners]]</span><br><span class="line">  name = "后端项目"</span><br><span class="line">  url = "http://192.168.235.129:9090/"</span><br><span class="line">  token = "0a183b8545b6d6364dcfe3635eee18"</span><br><span class="line">  executor = "shell"</span><br><span class="line">  [runners.custom_build_dir]</span><br><span class="line">  [runners.cache]</span><br><span class="line">    [runners.cache.s3]</span><br><span class="line">    [runners.cache.gcs]</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="项目中新建-gitlab-ci-yml-文件"><a href="#项目中新建-gitlab-ci-yml-文件" class="headerlink" title="项目中新建 .gitlab-ci.yml 文件"></a>项目中新建 .gitlab-ci.yml 文件</h1><ul>
<li><p>安装 sshpass ssh只能回车后输入密码登录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum -y install sshpass</span><br></pre></td></tr></table></figure>
</li>
<li><p>添加 ssh key 自动化执行脚本，clone项目避免输入用户名和密码；没有 ssh key 需要自己手动生成</p>
<p>获取 key</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>
<p>生成 key</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C "your.email@example.com" -b 4096</span><br></pre></td></tr></table></figure>
<p>配置 key<br><img src="/images/gitlab-config-sshkey.png" alt="值参考截图" title="截图参考"></p>
</li>
<li><p>设置变量 .yml 文件中会做 ssh 登录操作，像 password，ip 这些信息不便直接写在脚本中<br><img src="/images/gitlab-config-cicd.png" alt="值参考截图" title="截图参考"></p>
</li>
<li><p>前端 .yml 文件示例</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">stages: # 分段</span><br><span class="line">- install</span><br><span class="line">- build</span><br><span class="line">- deploy-sit</span><br><span class="line">- deploy-prod</span><br><span class="line">cache: # 缓存</span><br><span class="line">  paths:</span><br><span class="line">    - node_modules</span><br><span class="line">    - dist</span><br><span class="line">install-job:</span><br><span class="line">  tags:</span><br><span class="line">    - sit</span><br><span class="line">  only: </span><br><span class="line">    - sit</span><br><span class="line">    - prod</span><br><span class="line">  stage: install</span><br><span class="line">  script:</span><br><span class="line">    - cnpm install</span><br><span class="line">  </span><br><span class="line">build-job:</span><br><span class="line">  tags:</span><br><span class="line">    - sit</span><br><span class="line">  only: </span><br><span class="line">    - sit</span><br><span class="line">    - prod</span><br><span class="line">  stage: build</span><br><span class="line">  script:</span><br><span class="line">    - npm run build</span><br><span class="line">deploy-sit-job:</span><br><span class="line">  tags:</span><br><span class="line">    - sit</span><br><span class="line">  only: </span><br><span class="line">    - sit</span><br><span class="line">  stage: deploy-sit</span><br><span class="line">  script:</span><br><span class="line">    - sshpass -p $PASSWORD scp -r ./dist/* $USER_NAME@$IP:/root/backend-cicd/app/public</span><br><span class="line">    </span><br><span class="line">deploy-prod-job:</span><br><span class="line">  tags:</span><br><span class="line">    - sit</span><br><span class="line">  only: </span><br><span class="line">    - prod</span><br><span class="line">  stage: deploy-prod</span><br><span class="line">  script:</span><br><span class="line">    - sshpass -p $PASSWORD scp -r ./dist/* $USER_NAME@$IP:/root/backend-cicd/app/public</span><br></pre></td></tr></table></figure>
</li>
<li><p>node 后端 .yml 文件示例</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">stages: # 分段</span><br><span class="line">- deploy-sit</span><br><span class="line">- deploy-prod</span><br><span class="line">cache: # 缓存</span><br><span class="line">  paths:</span><br><span class="line">    - node_modules</span><br><span class="line">before_script:</span><br><span class="line">  - sshpass -p $PASSWORD ssh $USERNAME@$IP -o StrictHostKeyChecking=no  </span><br><span class="line">  - cd ~</span><br><span class="line">  - ([ -d /root/backend-cicd/app/public ] &amp;&amp; mv /root/backend-cicd/app/public /root/public) || echo</span><br><span class="line">  - rm -rf ./backend-cicd</span><br><span class="line">  - git clone git@192.168.235.129:zhongs/backend-cicd.git</span><br><span class="line">  - ([ -d /root/public ] &amp;&amp; mv /root/public /root/backend-cicd/app/public) || echo</span><br><span class="line">  - cd ./backend-cicd</span><br><span class="line">  </span><br><span class="line">deploy-sit-job:</span><br><span class="line">  tags:</span><br><span class="line">    - backend-cicd</span><br><span class="line">  only: </span><br><span class="line">    - sit</span><br><span class="line">  stage: deploy-sit</span><br><span class="line">  script:</span><br><span class="line">    - pwd</span><br><span class="line">    - git checkout sit</span><br><span class="line">    - cnpm install</span><br><span class="line">    - npm run stop</span><br><span class="line">    - npm run start-sit</span><br><span class="line">    - exit</span><br><span class="line">    </span><br><span class="line">deploy-prod-job:</span><br><span class="line">  tags:</span><br><span class="line">    - backend-cicd</span><br><span class="line">  only: </span><br><span class="line">    - prod</span><br><span class="line">  stage: deploy-prod</span><br><span class="line">  script:</span><br><span class="line">    - pwd</span><br><span class="line">    - git checkout prod</span><br><span class="line">    - cnpm install</span><br><span class="line">    - npm run stop</span><br><span class="line">    - npm run start-prod</span><br><span class="line">    - exit</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="参阅资料"><a href="#参阅资料" class="headerlink" title="参阅资料"></a>参阅资料</h1><ul>
<li><a href="https://mp.weixin.qq.com/s/vllbzDjE7sraZj9axk1u4A" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/vllbzDjE7sraZj9axk1u4A</a></li>
</ul>
]]></content>
      <categories>
        <category>CI/CD</category>
      </categories>
      <tags>
        <tag>部署</tag>
      </tags>
  </entry>
</search>
